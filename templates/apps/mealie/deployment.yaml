{{- if .Values.services.mealie.enabled }}
{{- $service := .Values.services.mealie  }}
{{- $kind := "app" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mealie
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 4 }}
    app.kubernetes.io/name: mealie
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "service" $service "kind" $kind "context" $ ) | nindent 6 }}
      app.kubernetes.io/name: mealie
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 8 }}
        app.kubernetes.io/name: mealie
    spec:
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      priorityClassName: {{ include "common.pod.priorityClass" (dict "service" $service "kind" $kind "context" $) | quote }}
      securityContext: {{- include "common.pod.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 8 }}
      initContainers: {{- include "common.pod.initContainers" (dict "service" $service "kind" $kind "context" $) | nindent 8 }}
        {{- include "common.initContainer.volumePermissions" ( dict "volumes" (list "data") "context" $ ) | nindent 8 }}
      containers:
        - name: mealie
          image: {{ printf "%s:%s" $service.image.repository $service.image.tag | quote }}
          imagePullPolicy: {{ $service.image.pullPolicy }}
          securityContext: {{- include "common.container.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          envFrom: {{- include "common.container.envFrom" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          env: {{- include "common.container.env" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: DB_ENGINE
              value: sqlite
            - name: ALLOW_SIGNUP
              value: "false"
            - name: BASE_URL
              value: {{ include "common.utils.ingressUrl" ( dict "service" $service "context" $ ) }}
            - name: TOKEN_TIME
              value: {{ $service.tokenTimeHours | quote }}
            - name: API_DOCS
              value: "false"
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          resources: {{- include "common.container.resources" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          volumeMounts: {{- include "common.container.volumeMounts" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
            - name: data
              mountPath: /app/data
      volumes: {{- include "common.pod.volumes" (dict "service" $service "kind" $kind "context" $) | nindent 8 }}
        - name: data
          hostPath:
            path: {{ $service.persistence.data | quote }}
            type: Directory
{{- end }}
