{{- if .Values.services.mealie.enabled }}
{{- $service := .Values.services.mealie -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mealie
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: mealie
    {{- include "homeserver.labels" . | indent 2 }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mealie
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mealie
        {{- include "homeserver.labels" . | indent 6 }}
    spec:
      securityContext:
        sysctls:
          {{- if $service.vpn.enabled }}
          {{- include "homeserver.vpn.wg-sysctls" . | indent 8 }}
          {{- end }}
      initContainers:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-sidecar" . | indent 6 }}
        {{- end }}
      containers:
        - name: mealie
          image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
          imagePullPolicy: {{ $service.image.pullPolicy }}
          env:
            {{- range $key, $value := $service.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: DB_ENGINE
              value: sqlite
            - name: ALLOW_SIGNUP
              value: "false"
            - name: BASE_URL
              value: "https://{{ $service.name }}.{{ required "A valid .Values.ingress.domain required!" .Values.ingress.domain }}"
            - name: TOKEN_TIME
              value: {{ $service.tokenTimeHours | quote }}
            - name: API_DOCS
              value: "false"
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-volumes" . | indent 6 }}
        {{- end }}
        - name: data
          hostPath:
            path: "{{ $service.data }}"
            type: Directory
{{- end }}
