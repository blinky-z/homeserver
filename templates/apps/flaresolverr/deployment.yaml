{{- if .Values.services.flaresolverr.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.flaresolverr.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.services.flaresolverr.name }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.services.flaresolverr.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.services.flaresolverr.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.services.flaresolverr.name }}
    spec:
      initContainers:
      {{- if .Values.services.flaresolverr.vpn.enabled }}
        - name: gluetun
          image: ghcr.io/qdm12/gluetun:v3.40
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          env:
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: VPN_SERVICE_PROVIDER
              value: custom
            - name: VPN_TYPE
              value: wireguard
            - name: HTTP_CONTROL_SERVER_ADDRESS
              value: ":8001"
            - name: DNS_KEEP_NAMESERVER
              value: "on"
            - name: FIREWALL_OUTBOUND_SUBNETS
              value: "10.42.0.0/15"
            - name: WIREGUARD_MTU
              value: {{ .Values.vpn.wgMtu | quote }}
            - name: HEALTH_VPN_DURATION_INITIAL
              value: {{ .Values.vpn.health.durationInitial | quote }}
            - name: HEALTH_VPN_DURATION_ADDITION
              value: {{ .Values.vpn.health.durationAddition | quote }}
            - name: HEALTH_SUCCESS_WAIT_DURATION
              value: {{ .Values.vpn.health.successWaitDuration | quote }}
            - name: HEALTH_TARGET_ADDRESS
              value: {{ .Values.vpn.health.targetAddress | quote }}
          volumeMounts:
            - name: wg0-conf
              mountPath: /gluetun/wireguard/
              readOnly: true
            - name: dev-net-tun
              mountPath: /dev/net/tun
        - name: verify-vpn
          image: busybox
          command:
            - sh
            - -c
            - |
              tries=0
              while ! ping -c 1 8.8.8.8; do
                tries=$((tries+1))
                if [ $tries -eq 12 ]; then
                  echo "Timeout limit exceeded, couldn't establish VPN connection"
                  exit 1
                fi
                echo "Ping failed, retrying in 5s"
                sleep 5
              done
              echo "VPN connection established successfully"
      {{- end }}
      containers:
        - name: flaresolverr
          image: "{{ .Values.services.flaresolverr.image.repository }}:{{ .Values.services.flaresolverr.image.tag }}"
          imagePullPolicy: {{ .Values.services.flaresolverr.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.services.flaresolverr.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: DRIVER
              value: {{ .Values.services.flaresolverr.driver | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.services.flaresolverr.logLevel | quote }}
            - name: LANG
              value: {{ .Values.services.flaresolverr.lang | quote }}
          ports:
            - name: http
              containerPort: 8191
              protocol: TCP
      volumes:
        {{- if .Values.services.flaresolverr.vpn.enabled }}
        - name: wg0-conf
          secret:
            secretName: {{ .Values.services.flaresolverr.vpn.wgConfSecretName | default .Values.vpn.wgConfSecretName }}
            optional: false
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
        {{- end }}
{{- end}}
