{{- if .Values.services.miniflux.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.miniflux.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.services.miniflux.name }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.services.miniflux.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.services.miniflux.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.services.miniflux.name }}
    spec:
      containers:
        - name: miniflux
          image: "{{ .Values.services.miniflux.image.repository }}:{{ .Values.services.miniflux.image.tag }}"
          imagePullPolicy: {{ .Values.services.miniflux.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.services.miniflux.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: DATABASE_URL
              value: postgres://{{ .Values.services.miniflux.db.user }}:{{ required "A valid .Values.services.miniflux.db.password required!" .Values.services.miniflux.db.password }}@{{ .Values.services.miniflux.db.name }}/{{ .Values.services.miniflux.db.dbname }}?sslmode=disable
            - name: RUN_MIGRATIONS
              value: "1"
            - name: CREATE_ADMIN
              value: "0"
            - name: DISABLE_LOCAL_AUTH
              value: "false"
            - name: AUTH_PROXY_HEADER
              value: 'X-authentik-email'
            - name: AUTH_PROXY_USER_CREATION
              value: "1"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /usr/bin/miniflux
                - -healthcheck
                - auto
            initialDelaySeconds: 60
            periodSeconds: 30
{{- end }}
