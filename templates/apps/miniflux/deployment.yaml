{{- if .Values.services.miniflux.enabled }}
{{- $service := .Values.services.miniflux -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $service.name }}
    {{- include "homeserver.labels" . | indent 2 }}
    homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.name }}
        {{- include "homeserver.labels" . | indent 6 }}
        homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
    spec:
      securityContext:
        sysctls:
          {{- if $service.vpn.enabled }}
          {{- include "homeserver.vpn.wg-sysctls" . | indent 8 }}
          {{- end }}
      initContainers:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-sidecar" . | indent 6 }}
        {{- end }}
      containers:
        - name: miniflux
          image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
          imagePullPolicy: {{ $service.image.pullPolicy }}
          env:
            {{- range $key, $value := $service.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: DATABASE_URL
              value: postgres://{{ $service.db.user }}:{{ required "A valid $service.db.password required!" $service.db.password }}@{{ $service.name }}-db/{{ $service.db.dbname }}?sslmode=disable
            - name: RUN_MIGRATIONS
              value: "1"
            - name: CLEANUP_ARCHIVE_READ_DAYS
              value: {{ $service.cleanupArchiveReadDays | quote }}
            - name: CLEANUP_ARCHIVE_UNREAD_DAYS
              value: {{ $service.cleanupArchiveUnreadDays | quote }}
            - name: CLEANUP_FREQUENCY_HOURS
              value: {{ $service.cleanupFrequencyHours | quote }}
            - name: CREATE_ADMIN
              value: "0"
            - name: DISABLE_LOCAL_AUTH
              value: "false"
            - name: AUTH_PROXY_HEADER
              value: 'X-authentik-email'
            - name: AUTH_PROXY_USER_CREATION
              value: "1"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /usr/bin/miniflux
                - -healthcheck
                - auto
            initialDelaySeconds: 60
            periodSeconds: 30
      volumes:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-volumes" . | indent 6 }}
        {{- end }}
{{- end }}
