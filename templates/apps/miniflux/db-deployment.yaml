{{- if .Values.services.miniflux.enabled }}
{{- $service := .Values.services.miniflux -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $service.name }}-db
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $service.name }}-db
    {{- include "homeserver.labels" . | indent 2 }}
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service.name }}-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.name }}-db
        {{- include "homeserver.labels" . | indent 6 }}
    spec:
      containers:
        - name: miniflux-db
          image: postgres:17
          imagePullPolicy: Always
          env:
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: POSTGRES_USER
              value: {{ $service.db.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ required "A valid $service.db.password required!" $service.db.password | quote }}
            - name: POSTGRES_DB
              value: {{ $service.db.dbname | quote }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ $service.db.user }}
            initialDelaySeconds: 60
            periodSeconds: 30
      volumes:
        - name: data
          hostPath:
            path: "{{ $service.db.data }}"
            type: Directory
{{- end }}
