{{- if .Values.services.archivebox.enabled }}
{{- $service := .Values.services.archivebox -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $service.name }}
    {{- include "homeserver.labels" . | indent 2 }}
    homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.name }}
        {{- include "homeserver.labels" . | indent 6 }}
        homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
    spec:
      securityContext:
        sysctls:
          {{- if $service.vpn.enabled }}
          {{- include "homeserver.vpn.wg-sysctls" . | indent 8 }}
          {{- end }}
      initContainers:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-sidecar" . | indent 6 }}
        {{- end }}
      containers:
        - name: archivebox
          image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
          imagePullPolicy: {{ $service.image.pullPolicy }}
          env:
            {{- range $key, $value := $service.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: ADMIN_USERNAME
              value: {{ $service.adminUsername | quote }}
            - name: ADMIN_PASSWORD
              value: {{ $service.adminPassword | quote }}
            - name: CSRF_TRUSTED_ORIGINS
            {{- $csrfTrustedOrigins := list }}
            {{- range $host := $service.ingress }}
                {{ $csrfTrustedOrigins = append $csrfTrustedOrigins (printf "https://%s.%s" $host (required "A valid .Values.ingress.domain required!" $.Values.ingress.domain)) }}
            {{- end }}
              value: {{ join "," $csrfTrustedOrigins }}
            - name: ALLOWED_HOSTS
            {{- $allowedHosts := list }}
            {{ $allowedHosts = append $allowedHosts $service.name }}
            {{- range $host := $service.ingress }}
                {{ $allowedHosts = append $allowedHosts (printf "%s.%s" $host (required "A valid .Values.ingress.domain required!" $.Values.ingress.domain)) }}
            {{- end }}
              value: {{ join "," $allowedHosts }}
            - name: REVERSE_PROXY_USER_HEADER
              value: "X-authentik-email"
            - name: REVERSE_PROXY_WHITELIST
              value: "10.42.0.0/15"
            - name: PUBLIC_INDEX
              value: "false"
            - name: PUBLIC_SNAPSHOTS
              value: "false"
            - name: PUBLIC_ADD_VIEW
              value: "false"
            - name: SAVE_TITLE
              value: {{ $service.saveTitle | quote }}
            - name: SAVE_FAVICON
              value: {{ $service.saveFavicon | quote }}
            - name: SAVE_WGET
              value: {{ $service.saveWget | quote }}
            - name: SAVE_WARC
              value: {{ $service.saveWarc | quote }}
            - name: SAVE_PDF
              value: {{ $service.savePdf | quote }}
            - name: SAVE_SCREENSHOT
              value: {{ $service.saveScreenshot | quote }}
            - name: SAVE_DOM
              value: {{ $service.saveDom | quote }}
            - name: SAVE_SINGLEFILE
              value: {{ $service.saveSinglefile | quote }}
            - name: SAVE_READABILITY
              value: {{ $service.saveReadability | quote }}
            - name: SAVE_MERCURY
              value: {{ $service.saveMercury | quote }}
            - name: SAVE_GIT
              value: {{ $service.saveGit | quote }}
            - name: SAVE_MEDIA
              value: {{ $service.saveMedia | quote }}
            - name: SAVE_ARCHIVE_DOT_ORG
              value: {{ $service.saveArchiveDotOrg | quote }}
            - name: MEDIA_MAX_SIZE
              value: {{ $service.mediaMaxSize | quote }}
            - name: TIMEOUT
              value: {{ $service.timeout | quote }}
            - name: CHECK_SSL_VALIDITY
              value: "true"
            - name: WGET_USER_AGENT
              value: {{ $service.userAgent | quote }}
            - name: CURL_USER_AGENT
              value: {{ $service.userAgent | quote }}
            - name: CHROME_USER_AGENT
              value: {{ $service.userAgent | quote }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-volumes" . | indent 6 }}
        {{- end }}
        - name: data
          hostPath:
            path: "{{ $service.data }}"
            type: Directory
{{- end }}
