{{- if .Values.services.calibre.enabled }}
{{- $service := .Values.services.calibre -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $service.name }}
    {{- include "homeserver.labels" . | indent 2 }}
    homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.name }}
        {{- include "homeserver.labels" . | indent 6 }}
        homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
    spec:
      securityContext:
        sysctls:
          {{- if $service.vpn.enabled }}
          {{- include "homeserver.vpn.wg-sysctls" . | indent 8 }}
          {{- end }}
      initContainers:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-sidecar" . | indent 6 }}
        {{- end }}
      containers:
        - name: calibre
          image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
          imagePullPolicy: {{ $service.image.pullPolicy }}
          env:
            {{- range $key, $value := $service.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
          ports:
            - name: http
              containerPort: 8083
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: ingest
              mountPath: /cwa-book-ingest
            - name: data
              mountPath: /calibre-library
            - name: gmail-credentials
              mountPath: /app/calibre-web/gmail.json
              subPath: gmail.json
              readOnly: true
      volumes:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-volumes" . | indent 6 }}
        {{- end }}
        - name: config
          hostPath:
            path: "{{ $service.config }}"
            type: Directory
        - name: ingest
          hostPath:
            path: "{{ $service.ingest }}"
            type: Directory
        - name: data
          hostPath:
            path: "{{ $service.data }}"
            type: Directory
        - name: gmail-credentials
          secret:
            secretName: calibre-gmail-credentials
            items:
              - key: gmail.json
                path: gmail.json
            optional: true
{{- end }}
