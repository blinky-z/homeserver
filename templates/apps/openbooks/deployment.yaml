{{- if .Values.services.openbooks.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.openbooks.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.services.openbooks.name }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.services.openbooks.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.services.openbooks.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.services.openbooks.name }}
    spec:
      initContainers:
      {{- if .Values.services.openbooks.vpn.enabled }}
        - name: gluetun
          image: ghcr.io/qdm12/gluetun:v3.40
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          envFrom:
            - secretRef:
                name: gluetun-conf-secret
                optional: false
          env:
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
            - name: HTTP_CONTROL_SERVER_ADDRESS
              value: ":9998"
            - name: DNS_KEEP_NAMESERVER
              value: "on"
            - name: FIREWALL_OUTBOUND_SUBNETS
              value: "10.42.0.0/15"
            - name: HEALTH_SERVER_ADDRESS
              value: ":9999"
            - name: HEALTH_VPN_DURATION_INITIAL
              value: {{ .Values.vpn.health.durationInitial | quote }}
            - name: HEALTH_VPN_DURATION_ADDITION
              value: {{ .Values.vpn.health.durationAddition | quote }}
            - name: HEALTH_SUCCESS_WAIT_DURATION
              value: {{ .Values.vpn.health.successWaitDuration | quote }}
            - name: HEALTH_TARGET_ADDRESS
              value: {{ .Values.vpn.health.targetAddress | quote }}
          volumeMounts:
            - name: dev-net-tun
              mountPath: /dev/net/tun
          readinessProbe:
            httpGet:
              path: /
              port: 9999
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 10
            successThreshold: 1
      {{- end }}
      containers:
        - name: openbooks
          image: "{{ .Values.services.openbooks.image.repository }}:{{ .Values.services.openbooks.image.tag }}"
          args:
            - --persist
            - --name
            - "{{ required "A valid IRC name required!" .Values.services.openbooks.ircname }}"
            - --no-browser-downloads
            - "{{ .Values.services.openbooks.noBrowserDownloads }}"
            - --tls
            - "true"
          imagePullPolicy: {{ .Values.services.openbooks.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.services.openbooks.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: ingest
              mountPath: /books/books # see https://github.com/evan-buss/openbooks/issues/60
      volumes:
        {{- if .Values.services.openbooks.vpn.enabled }}
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
        {{- end }}
        - name: ingest
          hostPath:
            path: "{{ .Values.services.calibre.ingest }}"
            type: Directory
{{- end }}
