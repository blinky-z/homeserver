{{- if .Values.services.sabnzbd.enabled }}
{{- $service := .Values.services.sabnzbd -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $service.name }}
    {{- include "homeserver.labels" . | indent 2 }}
    homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $service.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.name }}
        {{- include "homeserver.labels" . | indent 6 }}
        homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
      annotations:
        checksum/config-scripts: {{ include (print $.Template.BasePath "/apps/sabnzbd/scripts-configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        sysctls:
          {{- if $service.vpn.enabled }}
          {{- include "homeserver.vpn.wg-sysctls" . | indent 8 }}
          {{- end }}
      initContainers:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-sidecar" . | indent 6 }}
        {{- end }}
        - name: whitelist-ingress-hosts
          image: busybox
          imagePullPolicy: IfNotPresent
          {{- $hostWhitelist := list }}
          {{ $hostWhitelist = append $hostWhitelist $service.name }}
          {{- range $host := $service.ingress }}
            {{ $hostWhitelist = append $hostWhitelist (printf "%s.%s" $host (required "A valid .Values.ingress.domain required!" $.Values.ingress.domain)) }}
          {{- end }}
          command:
            - /bin/sh
            - -c
            - sed -i "s/host_whitelist\s*=.*/host_whitelist = {{ join "," $hostWhitelist }}/" /config/sabnzbd.ini
          volumeMounts:
            - name: config
              mountPath: /config
        - name: add-scripts
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - mkdir -p /config/scripts && cp -rfL /tmp/scripts/* /config/scripts/ && chmod -R a=,a+rx,u+w,g+w /config/scripts
          volumeMounts:
            - name: config
              mountPath: /config
            - name: scripts
              mountPath: /tmp/scripts
      containers:
        - name: sabnzbd
          image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
          imagePullPolicy: {{ $service.image.pullPolicy }}
          env:
            {{- range $key, $value := $service.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: TZ
              value: {{ required "A valid timezone required!" .Values.host.tz | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: {{ $service.data | quote }}
      volumes:
        {{- if $service.vpn.enabled }}
        {{- include "homeserver.vpn.wg-volumes" . | indent 6 }}
        {{- end }}
        - name: scripts
          configMap:
            name: "{{ $service.name }}-scripts"
        - name: config
          hostPath:
            path: {{ $service.config | quote }}
            type: Directory
        - name: data
          hostPath:
            path: {{ $service.data | quote }}
            type: Directory
{{- end }}
