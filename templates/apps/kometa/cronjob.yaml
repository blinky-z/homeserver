{{- if .Values.services.kometa.enabled }}
{{- $service := .Values.services.kometa -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $service.name }}
    {{- include "homeserver.labels" . | indent 2 }}
    homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
spec:
  schedule: {{ $service.scheduleCron }}
  timeZone: {{ required "A valid timezone required!" .Values.host.tz }}
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $service.name }}
        {{- include "homeserver.labels" . | indent 6 }}
        homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ $service.name }}
            {{- include "homeserver.labels" . | indent 10 }}
            homeserver/vpn: {{ $service.vpn.enabled | default false | ternary "true" "false" | quote }}
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/apps/kometa/configmap.yaml") . | sha256sum }}
        spec:
          securityContext:
            fsGroup: {{ required "A valid GID required!" .Values.host.gid }}
            sysctls:
              {{- if $service.vpn.enabled }}
              {{- include "homeserver.vpn.wg-sysctls" . | indent 12 }}
              {{- end }}
          initContainers:
            {{- if $service.vpn.enabled }}
            {{- include "homeserver.vpn.wg-sidecar" . | indent 10 }}
            {{- end }}
            - name: add-kometa-config
              image: busybox
              imagePullPolicy: IfNotPresent
              securityContext:
                runAsUser: {{ required "A valid UID required!" .Values.host.uid }}
                runAsGroup: {{ required "A valid GID required!" .Values.host.gid }}
                runAsNonRoot: true
              command:
                - /bin/sh
                - -c
                - cp -rfL /tmp/config/* /config/ && chmod -R a=,a+rX,u+w,g+w /config
              volumeMounts:
                - name: config
                  mountPath: /config
                - name: kometa-config
                  mountPath: /tmp/config
            {{- if $service.enableJmxdOverlays }}
            - name: init-jmxd-overlays
              image: alpine/git
              imagePullPolicy: IfNotPresent
              securityContext:
                runAsUser: {{ required "A valid UID required!" .Values.host.uid }}
                runAsGroup: {{ required "A valid GID required!" .Values.host.gid }}
                runAsNonRoot: true
              command:
                - /bin/sh
                - -c
                - |-
                  rm -rf /config/overlays/jmxd \
                    && git clone --depth=1 https://github.com/jmxd/Kometa.git /config/overlays/jmxd \
                    && cp -rfL /config/overlays/jmxd/overlays/* /config/overlays/ \
                    && rm -rf /config/overlays/jmxd \
                    && echo "Kometa jmxd overlays enabled. See https://github.com/jmxd/Kometa.git for details"
              volumeMounts:
                - name: config
                  mountPath: /config
            {{- end }}
          containers:
            - name: kometa
              image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
              imagePullPolicy: {{ $service.image.pullPolicy }}
              args: [ "--run", "--read-only-config", "--config", "config/config.yaml" ]
              securityContext:
                runAsUser: {{ required "A valid UID required!" .Values.host.uid }}
                runAsGroup: {{ required "A valid GID required!" .Values.host.gid }}
                runAsNonRoot: true
              env:
                {{- range $key, $value := $service.env }}
                - name: {{ $key | quote }}
                  value: {{ $value | quote }}
                {{- end }}
              resources:
                requests:
                  cpu: 100m
                  memory: 125Mi
                limits:
                  cpu: 1000m
                  memory: 1024Mi
              volumeMounts:
                - name: config
                  mountPath: /config
          volumes:
            {{- if $service.vpn.enabled }}
            {{- include "homeserver.vpn.wg-volumes" . | indent 10 }}
            {{- end }}
            - name: config
              hostPath:
                path: {{ $service.config | quote }}
                type: Directory
            - name: kometa-config
              configMap:
                name: {{ $service.name }}
          restartPolicy: OnFailure
{{- end }}
