{{- if .Values.services.backrest.enabled }}
{{- $service := .Values.services.backrest  }}
{{- $kind := "app" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "homeserver.common.names.name" ( dict "service" $service "kind" $kind ) | quote }}
  namespace: {{ include "homeserver.common.names.namespace" . | quote }}
  labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels: {{- include "homeserver.common.labels.matchLabels" ( dict "service" $service "kind" $kind "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 8 }}
    spec:
      automountServiceAccountToken: {{ include "homeserver.common.pod.automountServiceAccountToken" (dict "service" $service "kind" $kind "context" $) }}
      enableServiceLinks: {{ include "homeserver.common.pod.enableServiceLinks" (dict "service" $service "kind" $kind "context" $) }}
      priorityClassName: {{ include "homeserver.common.pod.priorityClass" (dict "service" $service "kind" $kind "context" $) | quote }}
      securityContext: {{- include "homeserver.common.pod.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 8 }}
      initContainers: {{- include "homeserver.common.pod.initContainers" (dict "service" $service "kind" $kind "context" $) | nindent 8 }}
      containers:
        - name: backrest
          image: {{ printf "%s:%s" $service.image.repository $service.image.tag | quote }}
          imagePullPolicy: {{ $service.image.pullPolicy }}
          securityContext: {{- include "homeserver.common.container.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          envFrom: {{- include "homeserver.common.container.envFrom" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          env: {{- include "homeserver.common.container.env" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
            - name: BACKREST_DATA
              value: /data # path for backrest data. restic binary and the database are placed here.
            - name: BACKREST_CONFIG
              value: /config/config.json # path for the backrest config file.
            - name: XDG_CACHE_HOME
              value: /cache # path for the restic cache which greatly improves performance.
          ports:
            - name: http
              containerPort: 9898
              protocol: TCP
          resources: {{- include "homeserver.common.container.resources" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          livenessProbe: {{- include "homeserver.common.container.livenessProbe.httpGet" (dict "service" $service "path" "/" "context" $) | nindent 12 }}
          readinessProbe: {{- include "homeserver.common.container.readinessProbe.httpGet" (dict "service" $service "path" "/" "context" $) | nindent 12 }}
          startupProbe: {{- include "homeserver.common.container.startupProbe.httpGet" (dict "service" $service "path" "/" "context" $) | nindent 12 }}
          volumeMounts: {{- include "homeserver.common.container.volumeMounts" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
            - name: userdata
              mountPath: /userdata
              readOnly: true
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
            - name: cache
              mountPath: /cache
      volumes: {{- include "homeserver.common.pod.volumes" (dict "service" $service "kind" $kind "context" $) | nindent 8 }}
        - name: userdata
          hostPath:
            path: {{ $service.userdata | quote }}
            type: Directory
        - name: data
          hostPath:
            path: {{ $service.persistence.data | quote }}
            type: Directory
        - name: config
          hostPath:
            path: {{ $service.persistence.config | quote }}
            type: Directory
        - name: cache
          hostPath:
            path: {{ $service.persistence.cache | quote }}
            type: Directory
{{- end }}
