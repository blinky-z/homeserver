apiVersion: batch/v1
kind: CronJob
metadata:
  name: authentik-postgresql-backup-cronjob
  namespace: {{ include "homeserver.names.authentik-namespace" . }}
  labels: {{- include "homeserver.common.labels.standard" ( dict "context" $ ) | nindent 4 }}
    app.kubernetes.io/name: authentik-postgresql-backup-cronjob
  annotations: {{- include "homeserver.common.annotations.standard" ( dict "context" $ ) | nindent 4 }}
spec:
  schedule: {{ .Values.authentik.postgresql.backup.scheduleCron }}
  timeZone: {{ required "A valid timezone required!" .Values.host.tz }}
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      labels: {{- include "homeserver.common.labels.standard" ( dict "context" $ ) | nindent 8 }}
        app.kubernetes.io/name: authentik-postgresql-backup-cronjob
      annotations: {{- include "homeserver.common.annotations.standard" ( dict "context" $ ) | nindent 8 }}
    spec:
      template:
        metadata:
          labels: {{- include "homeserver.common.labels.standard" ( dict "context" $ ) | nindent 12 }}
            app.kubernetes.io/name: authentik-postgresql-backup-cronjob
        spec:
          restartPolicy: OnFailure
          containers:
            - name: authentik-db-backup
              image: postgres:17
              imagePullPolicy: Always
              command: ["/bin/sh"]
              args:
                - -ec
                - find /backup/ -mtime +{{ .Values.authentik.postgresql.backup.retentionDays }} -exec rm -f {} \; ; pg_dump -Fc -C > /backup/authentik_db_backup_$(date +"%Y_%m_%d").dump
              envFrom: {{- include "homeserver.common.container.envFrom" (dict "context" $) | nindent 16 }}
              env: {{- include "homeserver.common.container.env" (dict "context" $) | nindent 16 }}
                - name: PGHOST
                  value: authentik-postgresql
                - name: PGUSER
                  value: authentik
                - name: PGPASSWORD
                  value: {{ required "A valid .Values.authentik.postgresql.auth.password required!" .Values.authentik.postgresql.auth.password | quote }}
                - name: PGDATABASE
                  value: authentik
              resources: {{- include "homeserver.common.resources.preset" (dict "type" "micro") | nindent 16 }}
              volumeMounts:
                - name: backup
                  mountPath: /backup
          volumes:
            - name: backup
              hostPath:
                path: {{ .Values.authentik.postgresql.backup.dir | quote }}
                type: Directory
